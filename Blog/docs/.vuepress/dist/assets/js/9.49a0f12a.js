(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{376:function(t,a,e){"use strict";e.r(a);var s=e(45),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"文档流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文档流"}},[t._v("#")]),t._v(" 文档流：")]),t._v(" "),e("h2",{attrs:{id:"什么是普通流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是普通流"}},[t._v("#")]),t._v(" 什么是普通流")]),t._v(" "),e("ul",[e("li",[t._v("就是元素在正常情况下默认的摆放规则")]),t._v(" "),e("li",[t._v("块级元素宽度撑满父亲、高度由内容撑开，可以设置宽高。按照在HTML里的顺序从上到下排列，会出现边距合并")]),t._v(" "),e("li",[t._v("内联元素的宽高与内容一致，无法设置宽高，只要有足够空间就会在一行排列，如果空间不够会下移一行")])]),t._v(" "),e("h2",{attrs:{id:"什么是脱离普通流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是脱离普通流"}},[t._v("#")]),t._v(" 什么是脱离普通流")]),t._v(" "),e("ul",[e("li",[t._v("就是元素不按默认规则摆放了，其他正常元素在计算自己的摆放位置时不把脱离普通流的元素包括在内")])]),t._v(" "),e("h2",{attrs:{id:"宽度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#宽度"}},[t._v("#")]),t._v(" 宽度：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("永远不要写宽度100%")])]),t._v(" "),e("li",[e("p",[t._v("block（div）默认能有多宽有多宽 ｜ div width默认宽度是auto（！不是100%）")])]),t._v(" "),e("li",[e("p",[t._v("inline宽度默认是inline的和")])]),t._v(" "),e("li",[e("p",[t._v("经验： 不要在inline里面写block")])]),t._v(" "),e("li",[e("p",[t._v("inline-block结合两个的特点.可用width")])])]),t._v(" "),e("h2",{attrs:{id:"高度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高度"}},[t._v("#")]),t._v(" 高度：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("inline 高度是由line-height间接确定的，跟height无关")])]),t._v(" "),e("li",[e("p",[t._v("block 高度跟内部文档流元素决定的，可以设定height")])]),t._v(" "),e("li",[e("p",[t._v("inline-block 跟 block类似，可以设置height")])])]),t._v(" "),e("h2",{attrs:{id:"脱离文档流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脱离文档流"}},[t._v("#")]),t._v(" 脱离文档流")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("float")])]),t._v(" "),e("li",[e("p",[t._v("float 属性能让一个元素放在其容器的左侧或右侧，允许文本和内联元素环绕它。 设置浮动的元素从网页的普通流(normal flow)中脱离，但不是完全脱离")])]),t._v(" "),e("li",[e("p",[t._v("position:absolute/fixed\nstatic: 元素正常的布局行为\nrelative: 元素做一些轻微的偏移（top/left/right/bottom）没有脱离正常的文档流（上下左右的位置偏移量是相对于参考元素的边框内壁来决定的）\nabsolute: 相对于最近的非static元素进行定位，脱离普通文档流\nfixed: 相对于屏幕的视口（viewport）的位置来指定元素的位置。脱离文档流\nsticky:相对定位和固定定位的混合（当滚动的过程时相当于relative，设置了top距离以后滚动，就会固定在上部）")])])]),t._v(" "),e("h1",{attrs:{id:"布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),e("ul",[e("li",[t._v("960 / 1000 / 1024")])]),t._v(" "),e("h2",{attrs:{id:"float-布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#float-布局"}},[t._v("#")]),t._v(" float 布局")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("子元素float设置float:left/right,并且给width")])]),t._v(" "),e("li",[e("p",[t._v("父元素."),e("code",[t._v("clearfix{content: '';display:block;clear:both}")])])]),t._v(" "),e("li",[e("p",[t._v("假如图片下面有多余的东西，可以用"),e("code",[t._v("vertical-align:top")]),t._v(" 或者"),e("code",[t._v("vertical-align:middle")]),t._v(" 去消除")])]),t._v(" "),e("li",[e("p",[t._v("border会影响时可以用outline")])]),t._v(" "),e("li",[e("p",[t._v("(如果是块级元素而且宽度固定)水平居中：margin：0 auto -> 最好替换为margin-left margin-right: auto")])]),t._v(" "),e("li",[e("p",[t._v("float的平均布局可以用负margin来解决换行问题")])]),t._v(" "),e("li",[e("p",[t._v("clear: left")])]),t._v(" "),e("li",[e("p",[t._v("要求该盒的top border边位于源文档中在此之前的元素形成的所有左浮动盒的底边下方")])]),t._v(" "),e("li",[e("p",[t._v("clear: right")])]),t._v(" "),e("li",[e("p",[t._v("要求该盒的top border边位于源文档中在此之前的元素形成的所有右浮动盒的底边下方")])]),t._v(" "),e("li",[e("p",[t._v("clear: both")])]),t._v(" "),e("li",[e("p",[t._v("要求该盒的top border边位于源文档中在此之前的元素形成的所有左浮动盒和右浮动盒的底边下方")])])]),t._v(" "),e("h2",{attrs:{id:"flex布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[t._v("#")]),t._v(" flex布局")]),t._v(" "),e("p",[e("code",[t._v("display:flex")]),t._v("父亲设置，对外展示块级特性")]),t._v(" "),e("h3",{attrs:{id:"container"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[t._v("#")]),t._v(" container")]),t._v(" "),e("p",[t._v("flex-direction row|row-reverse|column|column-reverse\nflex-wrap nowrap|wrap|wrap-reverse\njustify-content flex-start|flex-end|center|space-between|space-around|space-evenly\nalign-items flex-start|flex-end|center|stretch|baseline\nalign-content flex-start|flex-end|center|stretch|space-between|space-around")]),t._v(" "),e("h3",{attrs:{id:"item"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item"}},[t._v("#")]),t._v(" item")]),t._v(" "),e("ul",[e("li",[t._v("order item排列顺序，默认是0，负数在前面，正数在后面")]),t._v(" "),e("li",[t._v("flex-grow: 将多余的空间分配给item（变胖）(用来“瓜分”父项的“剩余空间”。)")]),t._v(" "),e("li",[t._v("flex-shrink 控制如何变瘦，在空间不够时如何缩小。默认是1，可以给0来防止item变小(用来“吸收”超出的空间)")]),t._v(" "),e("li",[t._v("flex-basis （理解为宽度）控制基准宽度，默认是auto(设置子项的占用空间。如果设置了值，则子项占用的空间为设置的值； 如果没设置或者为 auto，那子项的空间为设置的width/height 的值)")]),t._v(" "),e("li",[t._v("align-self 自己这个item怎么对齐;")]),t._v(" "),e("li",[t._v("flex : 1 === flex: 1 1 0%")]),t._v(" "),e("li",[t._v("flex的三个值，有单位的会对应为flex basis，没有单位的两个数字会对应为flex-grow flex-shrink，仅有一个无单位的数字时会对应flex-grow")])]),t._v(" "),e("h2",{attrs:{id:"grid布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid布局"}},[t._v("#")]),t._v(" grid布局")]),t._v(" "),e("p",[e("code",[t._v("display:grid")])]),t._v(" "),e("h3",{attrs:{id:"container-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#container-2"}},[t._v("#")]),t._v(" container")]),t._v(" "),e("p",[t._v("grid-template-columns: 10px auto 10px\ngrid-template-rows:25% auto 100px")]),t._v(" "),e("p",[t._v("也可以用fr去等分份数")]),t._v(" "),e("p",[t._v("grid-template是grid-template-rows和grid-template-columns的缩写形式。")]),t._v(" "),e("p",[t._v("比如说，grid-template: 50% 50% / 200px;将创建一个具有两行的网格，每一行占据50%，以及一个200像素宽的列。")]),t._v(" "),e("p",[t._v('grid-template-areas: ” header header header“\n"aside main ad"\n"footer footer footer"')]),t._v(" "),e("p",[t._v("用grid-area去指定所对应的区域")]),t._v(" "),e("p",[t._v("row/column-gap 行/列间隔")]),t._v(" "),e("h3",{attrs:{id:"item-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-2"}},[t._v("#")]),t._v(" item")]),t._v(" "),e("p",[t._v("grid-column-start\ngrid-column-end\n(grid-column:可接受两个值，相当于上面两行，需要用/分开)\ngrid-row-start\ngrid-row-end\n(grid-row同理)\n后面接收的都是第几根线")]),t._v(" "),e("p",[t._v("grid-area属性接受4个由'/'分开的值：grid-row-start, grid-column-start, grid-row-end, 最后是grid-column-end。")]),t._v(" "),e("h1",{attrs:{id:"选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择器"}},[t._v("#")]),t._v(" 选择器")]),t._v(" "),e("h2",{attrs:{id:"元素选择器-标签选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素选择器-标签选择器"}},[t._v("#")]),t._v(" 元素选择器(标签选择器)")]),t._v(" "),e("p",[e("code",[t._v("a{ text-decoration:none }")]),t._v(" "),e("code",[t._v("body{ font-size:14px }")])]),t._v(" "),e("h2",{attrs:{id:"id选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id选择器"}},[t._v("#")]),t._v(" id选择器")]),t._v(" "),e("p",[e("code",[t._v("#id{border:1px solid black}")]),t._v(" "),e("code",[t._v("box-shadow 水平阴影的位置 垂直阴影的位置 模糊距离 阴影的大小 阴影的颜色")])]),t._v(" "),e("h2",{attrs:{id:"类选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类选择器"}},[t._v("#")]),t._v(" 类选择器")]),t._v(" "),e("p",[e("code",[t._v(".active{color:red}")])]),t._v(" "),e("h2",{attrs:{id:"通用选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用选择器"}},[t._v("#")]),t._v(" 通用选择器")]),t._v(" "),e("p",[e("code",[t._v("* {margin:0; padding:0}")])]),t._v(" "),e("h2",{attrs:{id:"属性选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性选择器"}},[t._v("#")]),t._v(" 属性选择器")]),t._v(" "),e("ul",[e("li",[t._v("[attr]选择包含 attr 属性的所有元素，不论 attr 的值为何。")]),t._v(" "),e("li",[t._v("[attr=val] 仅选择 attr 属性被赋值为 val 的所有元素。")])]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[disabled]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #ccc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[data-color=“gray”]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #666"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h2",{attrs:{id:"组合选择"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组合选择"}},[t._v("#")]),t._v(" 组合选择")]),t._v(" "),e("ol",[e("li",[t._v("逗号，同时选中\n"),e("code",[t._v(".a,.b{ color:red }")])]),t._v(" "),e("li",[t._v("空格 A  B 选择A的后代B元素（没有空格时则同时具备两个，p.className）\n"),e("code",[t._v("ul li {color:red}")])]),t._v(" "),e("li",[t._v("大于号  A > B 选中A的直接B子元素\n"),e("code",[t._v("ul > li {color:red}")])]),t._v(" "),e("li",[t._v("加号 A + B      A的下一个邻居（平级关系）\n"),e("code",[t._v("target + li{ }")])]),t._v(" "),e("li",[t._v("波浪号 A ~ B    A的所有B邻居\n"),e("code",[t._v("target ~ li{ }")])])]),t._v(" "),e("h3",{attrs:{id:"伪类-节点特殊的状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类-节点特殊的状态"}},[t._v("#")]),t._v(" 伪类:(节点特殊的状态)")]),t._v(" "),e("p",[t._v(":link :visited :hover :active\n:focus :root(选中根结点) :checked :disabled\n:target(代表一个唯一的页面元素(目标元素)，其id 与当前URL片段匹配 .) :not")]),t._v(" "),e("h3",{attrs:{id:"伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[t._v("#")]),t._v(" 伪元素::")]),t._v(" "),e("p",[t._v("::before\n::after\n（在元素内插入一段内容，作为元素的第一个/最后一个 孩子\n必须有 content 属性\n常用来替代图标、无实际意义的标签）")]),t._v(" "),e("p",[t._v("::first-line\n::first-letter\n::selection(用户选中的内容)")]),t._v(" "),e("p",[e("code",[t._v("xxx:first-child")]),t._v(" "),e("code",[t._v("xxx:nth-child(2)")]),t._v(" "),e("code",[t._v("xxx:last-child")])]),t._v(" "),e("p",[t._v("white-space:nowrap文字不换行")]),t._v(" "),e("h3",{attrs:{id:"优先级顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优先级顺序"}},[t._v("#")]),t._v(" 优先级顺序")]),t._v(" "),e("p",[t._v("!important > 内联样式> 选择器设置样式 > 浏览器默认样式 > 继承样式")]),t._v(" "),e("p",[t._v("对于同一级别的样式，比如都带有!important 则比较选择器权重")]),t._v(" "),e("p",[t._v("color: inherit 当前元素使用继承自父亲的 color，不管父亲是否设置了color属性。\ncolor: initial 当前元素使用初始值，对于a链接来说初始值是黑色，而不是浏览器的默认样式蓝色\ncolor: unset 如果是继承属性则继承父级，如果是非继承属性就用initial value")]),t._v(" "),e("h1",{attrs:{id:"外边距合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外边距合并"}},[t._v("#")]),t._v(" 外边距合并")]),t._v(" "),e("ul",[e("li",[t._v("只有块级元素外边距才会产生合并，内联元素和inline-block元素不会")]),t._v(" "),e("li",[t._v("外边距合并只限于上下外边距，左右外边距不会合并")]),t._v(" "),e("li",[t._v("加边框、加padding、里面添加行内内容、创建块级格式化上下文等方法都可以阻止父子外边距合并")])]),t._v(" "),e("p",[t._v("width: 100%，在标准盒模型下当前元素的content的宽度等于父亲的content宽度\nwidth: 100%，在IE盒模型下当前元素的content+padding+border的总宽度等于父亲的content宽度")]),t._v(" "),e("p",[t._v("height: 100%, 表示当前元素的content的高度等于父亲content的高度\n如果父元素没有设置height属性，给子元素设置height:100%也是无效的\n想让当前元素撑满屏幕，一直方法是给当前元素、上一级、上上级...直到html标签全都设置 height: 100%")]),t._v(" "),e("h1",{attrs:{id:"浏览器渲染原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理"}},[t._v("#")]),t._v(" 浏览器渲染原理")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("根据HTML创建HTML树（DOM树）")])]),t._v(" "),e("li",[e("p",[t._v("根据CSS创建CSS树（CSSOM）")])]),t._v(" "),e("li",[e("p",[t._v("将两个树合并为一个树（render tree）")])]),t._v(" "),e("li",[e("p",[t._v("Layout布局（文档流，盒模型，计算大小和面积）")])]),t._v(" "),e("li",[e("p",[t._v("Pain绘制（绘制边框颜色，文字颜色，绘画阴影等）")])]),t._v(" "),e("li",[e("p",[t._v("Compose合成（根据层叠关系展示页面）")])]),t._v(" "),e("li",[e("p",[t._v("小技巧：可以利用 "),e("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("csstriggers.com"),e("OutboundLink")],1),t._v(" 去验证重绘等行为")])])]),t._v(" "),e("h1",{attrs:{id:"transform"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" transform")]),t._v(" "),e("ul",[e("li",[t._v("常用功能：translate, scale,rotate, skew")]),t._v(" "),e("li",[t._v("小技巧： 绝对定位元素的垂直居中； translate(-50%,-50%)")])]),t._v(" "),e("h1",{attrs:{id:"transition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transition"}},[t._v("#")]),t._v(" transition")]),t._v(" "),e("ul",[e("li",[t._v("transition: 属性名，时长，过渡方式，延迟")]),t._v(" "),e("li",[t._v("可以用 all 去代表所有属性")])]),t._v(" "),e("h1",{attrs:{id:"动画帧-keyframs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动画帧-keyframs"}},[t._v("#")]),t._v(" 动画帧 @keyframs")]),t._v(" "),e("ul",[e("li",[t._v("写法1:")])]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframs")]),t._v(" xxx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("0%")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("30%")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("100%")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("ul",[e("li",[t._v("写法2：")])]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframs")]),t._v(" xxx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[t._v("用法： animation: 时长 ｜ 过渡方式 ｜ 延迟 ｜ 次数 ｜ 方向 ｜ 填充模式 ｜ 是否暂停 ｜ 动画名")])]),t._v(" "),e("h1",{attrs:{id:"css计量单位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css计量单位"}},[t._v("#")]),t._v(" css计量单位")]),t._v(" "),e("ul",[e("li",[t._v("px： 像素")]),t._v(" "),e("li",[t._v("em： 2em 相对于父亲字体大小的倍数（如果是非font-size属性对应的值，则 是相对于当前元素的font-size")]),t._v(" "),e("li",[t._v("rem： 2rem 根元素(html 或者:root)字体的倍数")]),t._v(" "),e("li",[t._v("百分比：80% 同em相对于父亲字体大小的倍数")])]),t._v(" "),e("h1",{attrs:{id:"字体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字体"}},[t._v("#")]),t._v(" 字体")]),t._v(" "),e("ul",[e("li",[t._v("text-align: center | left | right | justify（两边对齐，最后一行不生效）\n注意：应用在块级容器上，对块内元素生效")])]),t._v(" "),e("h1",{attrs:{id:"层叠上下文-stacking-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文-stacking-context"}},[t._v("#")]),t._v(" 层叠上下文 stacking Context")]),t._v(" "),e("h2",{attrs:{id:"什么是上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是上下文"}},[t._v("#")]),t._v(" 什么是上下文：")]),t._v(" "),e("ul",[e("li",[t._v("是一个多方参与构建，遵循一定规则的、独立的环境")]),t._v(" "),e("li",[t._v("子项可能创建新的上下文，与外层上下文有同样的规则，且与外层上下文隔绝")])]),t._v(" "),e("h2",{attrs:{id:"形成层叠上下文的条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#形成层叠上下文的条件"}},[t._v("#")]),t._v(" 形成层叠上下文的条件：")]),t._v(" "),e("ul",[e("li",[t._v("根元素（比如html是最根本的层叠上下文）")]),t._v(" "),e("li",[t._v("z-index不为auto的绝对定位和相对定位元素")]),t._v(" "),e("li",[t._v("fixed、sticky定位元素")]),t._v(" "),e("li",[t._v("z-index不是auto的flex item")]),t._v(" "),e("li",[t._v("z-index不是auto的grid item")]),t._v(" "),e("li",[t._v("opacity小于1的元素")]),t._v(" "),e("li",[t._v("transform不为none的元素")])]),t._v(" "),e("h2",{attrs:{id:"层叠规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠规则"}},[t._v("#")]),t._v(" 层叠规则：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("属于同一层叠上下文的同级元素比较")])]),t._v(" "),e("li",[e("p",[t._v("当层叠上下文属于某一个层级时，其内的层叠上下文都属于对应层级.")])]),t._v(" "),e("li",[e("p",[t._v("注意观察形成的层级，他们的父亲的层级是多少")])])]),t._v(" "),e("h1",{attrs:{id:"bfc块级格式化上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc块级格式化上下文"}},[t._v("#")]),t._v(" BFC块级格式化上下文")]),t._v(" "),e("h2",{attrs:{id:"形成条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#形成条件"}},[t._v("#")]),t._v(" 形成条件：")]),t._v(" "),e("ul",[e("li",[t._v("根元素"),e("code",[t._v("<html>")])]),t._v(" "),e("li",[t._v("float不为none")]),t._v(" "),e("li",[t._v("position为absolute\\fixed\\sticky")]),t._v(" "),e("li",[t._v("display为inline-block、table-cell")]),t._v(" "),e("li",[t._v("display: flow-root 或者 flow-root list-item（推荐，但兼容性不好）")]),t._v(" "),e("li",[t._v("overflow为hidden、scroll、auto；")])]),t._v(" "),e("h2",{attrs:{id:"bfc特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc特性"}},[t._v("#")]),t._v(" BFC特性")]),t._v(" "),e("h3",{attrs:{id:"特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),e("ul",[e("li",[t._v("内部的块级盒子会在垂直方向，一个接一个地放置。")]),t._v(" "),e("li",[t._v("两个盒子垂直方向的间距由margin决定。属于同一个 BFC的两个相邻盒子的外边距会发生折叠。")]),t._v(" "),e("li",[t._v("BFC的区域不会与浮动盒重叠。")]),t._v(" "),e("li",[t._v("BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。")]),t._v(" "),e("li",[t._v("计算BFC的高度时，浮动元素也参与计算。")])]),t._v(" "),e("h2",{attrs:{id:"bfc应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc应用"}},[t._v("#")]),t._v(" BFC应用")]),t._v(" "),e("ul",[e("li",[t._v("阻止父子外边距合并 "),e("a",{attrs:{href:"http://js.jirengu.com/tavop/1/edit?html,css,output",target:"_blank",rel:"noopener noreferrer"}},[t._v("阻止合并"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("阻止块级元素与浮动元素的覆盖(创建BFC后，p不与浮动元素重叠，文字也不会围绕浮动元素)[http://js.jirengu.com/cihiw/1/edit]")]),t._v(" "),e("li",[t._v("清除浮动"),e("a",{attrs:{href:"http://js.jirengu.com/loliy/1/edit",target:"_blank",rel:"noopener noreferrer"}},[t._v("clearfix"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("注意： 创建BFC需要添加额外的属性，而这些属性有各自特殊作用， 往往会带来一定副作用。display: flow-root虽然无副作用，但兼容 性很差（ https://caniuse.com/#search=flow-root ）。因此多数 情况下清除浮动使用伪元素clearfix的方式")]),t._v(" "),e("h1",{attrs:{id:"渐进增强"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渐进增强"}},[t._v("#")]),t._v(" 渐进增强")]),t._v(" "),e("ul",[e("li",[t._v("针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能 达到更好的用户体验")])]),t._v(" "),e("h1",{attrs:{id:"优雅降级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优雅降级"}},[t._v("#")]),t._v(" 优雅降级")]),t._v(" "),e("ul",[e("li",[t._v("一开始就针对高级浏览器构建完整的功能，然后再针对低版本浏览器进行兼容做功能降级。")])]),t._v(" "),e("h1",{attrs:{id:"_12-页面导入样式时-使用-link-和-import-有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-页面导入样式时-使用-link-和-import-有什么区别"}},[t._v("#")]),t._v(" 12. 页面导入样式时，使用 link 和 @import 有什么区别？")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("（1）从属关系区别。 @import 是 CSS 提供的语法规则，只有导入样式表的作用；link 是 HTML 提供的标签，不仅可以加载 CSS 文件，还可以定义 RSS、rel 连接属性、引入网站图标等。\n\n（2）加载顺序区别。加载页面时，link 标签引入的 CSS 被同时加载；@import 引入的 CSS 将在页面加载完毕后被加载。\n\n（3）兼容性区别。@import 是 CSS2.1 才有的语法，故只可在 IE5+ 才能识别；link 标签作为 HTML 元素，不存在兼容性问题。\n\n（4）DOM 可控性区别。可以通过 JS 操作 DOM ，插入 link 标签来改变样式；由于 DOM 方法是基于文档的，无法使用 @import 的方式插入样式。\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("ul",[e("li",[e("p",[t._v("offsetWidth 水平方向 width + 左右padding + 左右border-width")])]),t._v(" "),e("li",[e("p",[t._v("offsetHeight 垂直方向 height + 上下padding + 上下border-width")])]),t._v(" "),e("li",[e("p",[t._v("clientWidth 水平方向 width + 左右padding")])]),t._v(" "),e("li",[e("p",[t._v("clientHeight 垂直方向 height + 上下padding")])]),t._v(" "),e("li",[e("p",[t._v("offsetTop 获取当前元素到 定位父节点 的top方向的距离")])]),t._v(" "),e("li",[e("p",[t._v("offsetLeft 获取当前元素到 定位父节点 的left方向的距离")])]),t._v(" "),e("li",[e("p",[t._v("scrollWidth 元素内容真实的宽度，内容不超出盒子高度时为盒子的clientWidth")])]),t._v(" "),e("li",[e("p",[t._v("scrollHeight 元素内容真实的高度，内容不超出盒子高度时为盒子的clientHeight")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);